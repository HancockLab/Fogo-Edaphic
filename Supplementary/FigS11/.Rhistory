head(df)
model_2 = lm(Ratio_N ~ CNV, data=df)
Anova(model_2, type="II")
df = read.table("F2sGenotype4R.txt",header=TRUE)
df =
mutate(df,
Location = factor(Genotype, levels=unique(Genotype)))
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
summary(df2)
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Anova(model_2, type="II")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tergemina/Dropbox/backup/Jupyter/dPCR/NRAMP1/")
library(dplyr)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
library(FSA)
model = lm(Green_Red ~ Genotype,
data=MultispeQ)
model_2 = lm(Ratio_N ~ CNV, data=df)
summary(model_2)
knitr::opts_chunk$set(echo = TRUE)
df = read.table("F2sGenotype4R.txt",header=TRUE)
df =
mutate(df,
Location = factor(Genotype, levels=unique(Genotype)))
library(FSA)
Summarize(Green_Red ~ Genotype,
data=df,
digits=3)
library(car)
model_1 = lm(Green_Red ~ Genotype,
data=df)
Anova(model_1, type="II")
summary(model_1)
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
summary(df2)
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
model_2 = lm(Green_Red ~ Genotype, data=df2)
summarise(model_2)
summary(model_2)
setwd("/Users/tergemina/Dropbox/backup/Jupyter/dPCR/NRAMP1/")
library(dplyr)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
model_2 = lm(Ratio_N ~ CNV, data=df)
summary(model_2)
setwd("/Users/tergemina/Dropbox/backup/Jupyter/dPCR/NRAMP1/")
library(dplyr)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
library(FSA)
bartlett.test(Ratio_N~ X4stats,df)
qqnorm(df$Ratio_N)
shapiro.test(df$Ratio_N)
library(car)
model = lm(Rattio_N ~ X4stats,
data=df)
Anova(model, type="II")
model = lm(Ratio_N ~ X4stats,
data=df)
Anova(model, type="II")
library(lsmeans)
library(multcompView)
library(multcomp)
Tukey = lsmeans(model,
"Genotype",
adjust = "tukey")
Tukey = lsmeans(model,
"X4stats",
adjust = "tukey")
cld(Tukey,
alpha   = 0.05,
Letters = letters,
adjust="sidak")
library(agricolae)
kru = kruskal(df$Ratio_N, df$X4stats, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru
oneway.test(Ratio_N ~ X4stats, data = df)
res.aov = aov(Ratio_N ~ X4stats, data = df)
summary(res.aov)
TukeyHSD(res.aov)
library(multcomp)
summary(glht(res.aov, linfct = mcp(group = "Tukey")))
glht(model, lincft)
summary(glht(res.aov, linfct = mcp(group = "Tukey")))
summary(glht(res.aov, linfct = mcp(X4stats = "Tukey")))
```{r Kruskal}
```{r Kruskal}
summary(glht(res.aov, linfct = mcp(X4stats = "Tukey")))
kruskal.test(Ratio_N ~ X4stats, data = df)
pairwise.wilcox.test(df$Ratio_N, df$X4stats, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
pairwise.wilcox.test(df$Ratio_N, df$X4stats, p.adj.method='BH')
pairwise.wilcox.test(df$Ratio_N, df$X4stats, p.adjust.method='BH')
head(df)
pairwise.wilcox.test(df$Ratio, df$X4stats, p.adjust.method='BH')
pairwise.wilcox.test(df$Ratio, df$Sample, p.adjust.method='BH')
library(tidyverse)
library(ggpubr)
library(rstatix)
install.packages("tidyverse")
df%>% kruskal_test(Ratio_Nweight ~ X4stats)
df%>% kruskal_test(Ratio_N ~ X4stats)
df %>% kruskal_test(Ratio_N ~ X4stats)
df %>% dunn_test(Ratio_N ~ X4stats,p.adjust.method = "bonferroni")
test = df %>% dunn_test(Ratio_N ~ X4stats,p.adjust.method = "bonferroni")
test
print(head)
print(test)
View(test)
kru = kruskal(df$Ratio_N, df$X4stats, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tergemina/Dropbox/backup/Jupyter/dPCR/NRAMP1/")
library(dplyr)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
Summarize(Ratio_N ~ X4stats,
data=df,
digits=3)
model = lm(Ratio_N ~ X4stats,
data=df)
summary(model)
```
test=lm(Ratio_N ~ CNV)
summary(test)
```
```
test=lm(Ratio_N ~ CNV,df)
summary(test)
```
```
test=lm(Ratio_N ~ CNV,df)
summary(test)
```
test=lm(Ratio_N ~ CNV,df)
summary(test)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
df = read.csv(file = 'dPCR_NRAMP1_20220126',header = TRUE)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
test=lm(Ratio_N ~ CNV,df)
summary(test)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
library(FSA)
library(FSA)
```{r summarize}
Summarize(Ratio_N ~ X4stats,
data=df,
digits=3)
bartlett.test(Ratio_N~ X4stats,df)
shapiro.test(df$Ratio_N)
test=lm(Ratio_N ~ CNV + IRT1,df)
test=lm(Ratio_N ~ CNV + IRT1 + Condition,df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + Condition + IRT1,df)
summary(test)
knitr::opts_chunk$set(echo = TRUE)
df = read.table("F2sGenotype4R.txt",header=TRUE)
df =
mutate(df,
Location = factor(Genotype, levels=unique(Genotype)))
library(FSA)
Summarize(Green_Red ~ Genotype,
data=df,
digits=3)
model_1 = lm(Green_Red ~ Genotype,
data=df)
summary(model_1)
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
summary(df2)
summary(model_1)
f2=lm(Green_Red ~ Genotype, data = df)
f2=lm(Green_Red ~ Genotype, data = df2)
summary(f2)
head(df2)
f2=lm(Green_Red ~ IRT1 + NRAMP1, data = df2)
summary(f2)
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Anova(model_2, type="II")
library(Rmisc)
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
Anova(model_2, type="II")
library(FSA)
library(car)
model_1 = lm(Green_Red ~ Genotype,
data=df)
Anova(model_1, type="II")
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
test=lm(Ratio_N ~ CNV + IRT1 + Condition,df)
summary(test)
anova(test)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1:Condition,df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV * IRT1 * Condition)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1:Condition,df)
test=lm(Ratio_N ~ CNV * IRT1 * Condition,df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1:Condition,df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition ,df)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition ,df)
summary(test)
anova(test)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
head(df)
df = read.table(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE)
df = df %>% filter(Sample != 'NTC')
head(df)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE,sep='\t')
df = df %>% filter(Sample != 'NTC')
head(df)
Summarize(Ratio_N ~ X4stats,
data=df,
digits=3)
bartlett.test(Ratio_N~ X4stats,df)
model = lm(Ratio_N ~ X4stats,
data=df)
Anova(model, type="II")
Tukey = lsmeans(model,
"X4stats",
adjust = "tukey")
cld(Tukey,
alpha   = 0.05,
Letters = letters,
adjust="sidak")
library(lsmeans)
library(multcompView)
library(multcomp)
Tukey = lsmeans(model,
"X4stats",
adjust = "tukey")
cld(Tukey,
alpha   = 0.05,
Letters = letters,
adjust="sidak")
test=lm(Ratio_N ~ CNV,df)
summary(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition, df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1+CNV , df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1:CNV , df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV + IRT1 + Condition + IRT1:Condition , df)
summary(test)
anova(test)
test=lm(Ratio_N ~ CNV * IRT1 * Condition  , df)
summary(test)
anova(test)
aov(Ratio_N ~ CNV + IRT1 + Condition, df)
knitr::opts_chunk$set(echo = TRUE)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE,sep='\t')
head(df)
library(dplyr)
library(FSA)
Summarize(Ratio_N ~ X4stats,
data=df,
digits=3)
library(car)
model = lm(Ratio_N ~ X4stats,
data=df)
Anova(model, type="II")
test=lm(Ratio_N ~ CNV + IRT1 + Condition, df)
summary(test)
anova(test)
contrasts(df$IRT1)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tergemina/Dropbox/backup/Jupyter/dPCR/NRAMP1/")
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE,sep='\t')
df = df %>% filter(Sample != 'NTC')
library(dplyr)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE,sep='\t')
df = df %>% filter(Sample != 'NTC')
head(df)
test=lm(Ratio_N ~ CNV + IRT1 + Condition, df)
summary(test)
df = read.csv(file = 'dPCR_NRAMP1_20220126.csv',header = TRUE,sep='\t')
df = df %>% filter(Sample != 'NTC')
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tergemina/Desktop/Pictures_20220111/IronSupSoil/20220121/")
setwd("/Users/tergemina/Desktop/Vrac/Pictures_20220111/IronSupSoil/20220121/")
library(dplyr)
results = read.csv('Results_20220121.csv',header = TRUE)
standard = results %>% filter(Condition == 'standard')
Fe = results %>% filter(Condition == 'Fe')
kru = kruskal(results$Area, results$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru
results = read.csv('Results_20220121.csv',header = TRUE)
standard = results %>% filter(Condition == 'standard')
Fe = results %>% filter(Condition == 'Fe')
Summarize(Green.Red ~ Genotype,
data=results,
digits=3)
library(FSA)
Summarize(Green.Red ~ Genotype,
data=results,
digits=3)
Chlorosis_Standard = kruskal(standard$Green.Red, standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
Chlorosis_Standard
kru = kruskal(results$Area, results$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru
kru = kruskal(results$Area, results$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
library(agricolae)
kru = kruskal(results$Green.Red, results$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru
Chlorosis_Fe = kruskal(Fe$Green.Red, standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
View(Fe)
Chlorosis_Fe = kruskal(Fe$Green.Red, Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
Chlorosis_Fe
Chlorosis_Standard = kruskal(standard$Green.Red, standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
Chlorosis_Standard
Area_Standard = kruskal(standard$Area, standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
Area_Standard
Area_Fe = kruskal(Fe$Area, Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
Area_Fe
setwd("../../../../../Dropbox/backup/Jupyter/Github/Supplementary/FigS14")
ls -ltr
df = read.csv(file = 'FigS14.csv',header = TRUE,sep='\t')
standard = df %>% filter(Condition == 'Standard')
Fe = df %>% filter(Condition == 'Fe')
kru_Fe_Greenness = kruskal(Fe$Greenness, Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_Fe_Greenness
kru_standard_Greenness = kruskal(standard$Greenness, standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_standard_Greenness
kru_standard_Area = kruskal(standard$Area..cm2., standard$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_standard_Area
kru_Fe_Greenness = kruskal(Fe$Greenness, Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_Fe_Greenness
kru_Fe_Area = kruskal(Fe$Area..cm2., Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_Fe_Area
kru_Fe_Greenness = kruskal(Fe$Greenness, Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_Fe_Greenness
kru_Fe_Area = kruskal(Fe$Area..cm2., Fe$Genotype, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_Fe_Area
setwd("../FigS13")
image = read.csv(file = 'FigS13A-B.csv',header = TRUE,sep='\t')
image = read.csv(file = 'FigS13A-B.csv',header = TRUE,sep='\t')
kru_image_Greenness = kruskal(image$Greenness, image$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_image_Greenness
kru_image_Area = kruskal(image$Area.cm2., image$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_image_Area
photosynq = read.csv(file = 'FigS13C-D.csv',header = TRUE,sep='\t')
kru_photosynq_Phi2 = kruskal(photosynq$Phi2, photosynq$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_photosynq_Phi2
#FigS13D
kru_photosynq_RelativeChloro = kruskal(photosynq$RelativeChlorophyll, photosynq$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_photosynq_RelativeChloro
ionome = read.csv(file = 'FigS13E-F.csv',header = TRUE,sep='\t')
#FigS13E
kru_ionome_Fe = kruskal(ionome$Fe, ionome$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_ionome_Fe
#FigS13F
kru_ionome_Mn = kruskal(ionome$Mn, ionome$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_ionome_Mn
#FigS13F
kru_ionome_Mn = kruskal(ionome$Mn, ionome$Sample, alpha=0.05, p.adj=c("bonferroni"), group=TRUE)
kru_ionome_Mn
setwd('../FigS11/')
df = read.csv(file = 'FigS11.csv',header = TRUE,sep='\t')
df = read.csv(file = 'FigS11.csv',header = TRUE,sep='\t')
qqnorm(df$Green_Red)
qqline(df$Green_Red)
View(df)
qqnorm(df$Greenness)
qqline(df$Greenness)
library(car)
library(dplyr)
library(car)
model_1 = lm(Greenness ~ Genotype,data=df)
Anova(model_1, type="II")
anova(model_1)
summary(model_1)
library(lsmeans)
library(multcompView)
library(multcomp)
posthoc_1 = lsmeans(model_1,
"Genotype",
adjust = "tukey")
cld(posthoc_1,
alpha   = 0.05,
Letters = letters,
adjust="tukey")
posthoc_1 = lsmeans(model_1,
"Genotype",
adjust = "bonferroni")
cld(posthoc_1,
alpha   = 0.05,
Letters = letters,
adjust="bonferroni")
#TabkeS8
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
summary(df2)
head(df)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Anova(model_2, type="II")
anova(model_2)
summary(model_2)
posthoc_2 <- lsmeans(model_2,
~ IRT1*NRAMP1,
adjust="tukey")
posthoc_2
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Anova(model_2, type="II")
anova(model_2)
summary(model_2)
posthoc_2 <- lsmeans(model_2,
~ IRT1*NRAMP1,
adjust="tukey")
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Anova(model_2, type="II")
anova(model_2)
summary(model_2)
posthoc_2 <- lsmeans(model_2,
~ IRT1*NRAMP1,
adjust="tukey")
posthoc_2
knitr::opts_chunk$set(echo = TRUE)
summary(model_2)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
library(Rmisc)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
df = mutate(df,Location = factor(Genotype, levels=unique(Genotype)))
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
Summarize(Greenness ~ Genotype,
data=df,
digits=3)
bartlett.test(Greenness ~ Genotype,df)
library(dplyr)
library(car)
library(lsmeans)
library(multcompView)
library(multcomp)
library(Rmisc)
#FigS11
model_1 = lm(Greenness ~ Genotype,data=df)
anova(model_1)
summary(model_1)
df2 = subset(df,Genotype!='F13-8' & Genotype!='Col-0')
summary(df2)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
head(df2)
#TabkeS8
model_2 = lm(Green_Red ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
summary(model_2)
anova(model_2)
#FigS11
model_1 = lm(Greenness ~ Genotype,data=df)
anova(model_1)
summary(model_1)
#TabkeS8
model_2 = lm(Greenness ~ IRT1 + NRAMP1 + IRT1:NRAMP1, data=df2)
anova(model_2)
summary(model_2)
#FigS11
model_1 = lm(Greenness ~ Genotype,data=df)
posthoc_1 = lsmeans(model_1,"Genotype",adjust = "tukey")
cld(posthoc_1,alpha   = 0.05,Letters = letters,adjust="tukey")
#TableS9
anova(model_2)
df2
df
